name: BE AutoTag on main

on:
  push:
    branches: ["main"]              
    paths:
      - "backend/**"               # backend 디렉터리 변경이 있을 때만

permissions:
  contents: write

jobs:
  be-autotag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Find last BE tag
        id: last
        run: |
          LAST_TAG=$(git tag --list "be-v*" --sort=-v:refname | head -n1 || true)
          echo "last=$LAST_TAG" >> $GITHUB_OUTPUT

      - name: Commit range since last BE tag
        id: range
        run: |
          if [ -z "${{ steps.last.outputs.last }}" ]; then
            RANGE="$(git rev-list --max-parents=0 HEAD | tail -n1)..HEAD"
          else
            RANGE="${{ steps.last.outputs.last }}..HEAD"
          fi
          echo "range=$RANGE" >> $GITHUB_OUTPUT

      - name: Decide bump by Conventional Commits
        id: bump
        run: |
          RANGE="${{ steps.range.outputs.range }}"
          COMMITS=$(git log --pretty=format:"%s%n%b" $RANGE -- backend || true)

          MAJOR=0; MINOR=0; PATCH=0
          echo "$COMMITS" | grep -qiE "(BREAKING CHANGE|!:)" && MAJOR=1
          [ $MAJOR -eq 0 ] && echo "$COMMITS" | grep -qiE "(^|[^a-z])feat(\(.+\))?: " && MINOR=1
          [ $MAJOR -eq 0 ] && [ $MINOR -eq 0 ] && echo "$COMMITS" | grep -qiE "(^|[^a-z])(fix|perf|refactor)(\(.+\))?: " && PATCH=1

          if [ $MAJOR -eq 0 ] && [ $MINOR -eq 0 ] && [ $PATCH -eq 0 ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          LAST="${{ steps.last.outputs.last }}"
          [ -z "$LAST" ] && BASE="0.0.0" || BASE="${LAST#be-v}"

          IFS='.' read -r MA MI PA <<< "$BASE"
          if [ $MAJOR -eq 1 ]; then
            MA=$((MA+1)); MI=0; PA=0
          elif [ $MINOR -eq 1 ]; then
            MI=$((MI+1)); PA=0
          else
            PA=$((PA+1))
          fi

          NEW="be-v${MA}.${MI}.${PA}"
          echo "new=$NEW" >> $GITHUB_OUTPUT

      - name: Create BE tag
        if: steps.bump.outputs.skip != 'true'
        run: |
          NEW="${{ steps.bump.outputs.new }}"
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag "$NEW"
          git push origin "$NEW"
